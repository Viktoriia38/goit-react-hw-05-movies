{"version":3,"file":"static/js/76.74a18b66.chunk.js","mappings":"sQACA,EAAuB,mBAAvB,EAAqD,uBAArD,EAAuF,uBAAvF,EAA0H,wBAA1H,EAAkK,4BAAlK,EAAyM,uB,SCqDzM,MAhDA,WACE,OAAkCA,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACEH,EAAU,WADZ,mBAI2BI,EAAAA,EAAAA,IAAeH,GAJ1C,OAIUI,EAJV,OAKIP,GAAa,OAAIO,EAASC,OAC1BN,EAAU,aANd,sDAQIA,EAAU,YACJ,IAAIO,MAAM,KAAMC,SAT1B,0DADc,uBAAC,WAAD,wBAadC,EACD,GAAE,CAACR,KAGF,2BACc,YAAXF,IAAwB,SAACW,EAAA,EAAD,KACzB,gBAAKC,UAAWC,EAAhB,UACE,eAAID,UAAWC,EAAf,SACGf,GACCA,EAAUgB,KAAI,SAAAC,GAAI,OAChB,gBAAIH,UAAWC,EAAf,UACGG,QAAQD,EAAKE,gBACZ,gBACEL,UAAWC,EACXK,IAAK,mCAAqCH,EAAKE,aAC/CE,IAAI,MAGR,eAAIP,UAAWC,EAAf,SAA8BE,EAAKK,QACnC,eAAGR,UAAWC,EAAd,wBACY,4BAAOE,EAAKM,UAAZ,YAVoBN,EAAKO,GADvB,UAmB7B,C,mECnDD,EAAyB,uB,SCElB,SAASX,IACd,OACE,gBAAKC,UAAWC,EAAhB,UACE,SAAC,KAAD,CAAcU,MAAM,MAAMC,MAAM,UAAUZ,UAAWC,KAG1D,C,+LCPKY,EAAW,+BACXC,EAAU,2CAEHC,EAAkB,mCAAG,sGACTC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,6BAA0CC,IADjC,uBACxBG,EADwB,EACxBA,KADwB,kBAEzBA,EAAKC,SAFoB,2CAAH,qDAKlBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPJ,EAAAA,EAAAA,IAAA,UAClBH,EADkB,yBACOC,EADP,4DACkEM,EADlE,MADO,uBACtBH,EADsB,EACtBA,KADsB,kBAIvBA,EAAKC,SAJkB,2CAAH,sDAOhBG,EAAqB,mCAAG,WAAMX,GAAN,yFACZM,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BH,EAA/B,YAAqCI,IADzB,uBAC3BG,EAD2B,EAC3BA,KAD2B,kBAE5BA,GAF4B,2CAAH,sDAKrBxB,EAAc,mCAAG,WAAMiB,GAAN,yFACLM,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAH,EADA,oBACcI,EADd,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdK,EAAgB,mCAAG,WAAMZ,GAAN,yFACPM,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAH,EADA,oBACcI,EADd,2BADO,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,EAAKC,SAJkB,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","services/movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__m5y0R\",\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\",\"castImage\":\"Cast_castImage__d8bQP\",\"castCharacter\":\"Cast_castCharacter__Rliw1\",\"castName\":\"Cast_castName__-i08u\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { castMovieFetch } from 'services/movies';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './Cast.module.css';\n\nfunction Cast() {\n  const [movieById, setMovieById] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function takeFilms() {\n      setStatus('loading');\n\n      try {\n        const response = await castMovieFetch(movieId);\n        setMovieById([...response.cast]);\n        setStatus('fulfilled');\n      } catch (error) {\n        setStatus('rejected');\n        throw new Error(error.message);\n      }\n    }\n    takeFilms();\n  }, [movieId]);\n\n  return (\n    <div>\n      {status === 'loading' && <Loader />}\n      <div className={css.cast}>\n        <ul className={css.castList}>\n          {movieById &&\n            movieById.map(item => (\n              <li className={css.castItem} key={item.id}>\n                {Boolean(item.profile_path) && (\n                  <img\n                    className={css.castImage}\n                    src={'https://image.tmdb.org/t/p/w500/' + item.profile_path}\n                    alt=\"\"\n                  />\n                )}\n                <h3 className={css.castName}>{item.name}</h3>\n                <p className={css.castCharacter}>\n                  Character <span>{item.character} </span>\n                </p>\n              </li>\n            ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { InfinitySpin } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nexport function Loader() {\n  return (\n    <div className={css.loader}>\n      <InfinitySpin width=\"200\" color=\"#4fa94d\" className={css.loader} />\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY_URL = 'api_key=adefcfc38a20bb4e0e69bacf747b4806';\n\nexport const trendingMovieFetch = async () => {\n  const { data } = await axios.get(`${BASE_URL}/trending/all/day?${KEY_URL}`);\n  return data.results;\n};\n\nexport const searchMovieFetch = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?${KEY_URL}&language=en-US&page=1&include_adult=false&query=${query};`\n  );\n  return data.results;\n};\n\nexport const descriptionMovieFetch = async id => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${id}?${KEY_URL}`);\n  return data;\n};\n\nexport const castMovieFetch = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?${KEY_URL}&language=en-US`\n  );\n  return data;\n};\n\nexport const reviewMovieFetch = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?${KEY_URL}&language=en-US&page=1`\n  );\n  return data.results;\n};\n"],"names":["useState","movieById","setMovieById","status","setStatus","movieId","useParams","useEffect","castMovieFetch","response","cast","Error","message","takeFilms","Loader","className","css","map","item","Boolean","profile_path","src","alt","name","character","id","width","color","BASE_URL","KEY_URL","trendingMovieFetch","axios","data","results","searchMovieFetch","query","descriptionMovieFetch","reviewMovieFetch"],"sourceRoot":""}